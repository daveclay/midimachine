package com.daveclay.midi;

import com.daveclay.midi.random.RandyTheRandom;

import java.util.HashMap;
import java.util.Map;

import static com.daveclay.midi.NoteValueType.*;

public enum NoteValue {

	C0("C", "C0", 0, NOTE),
	C_SHARP0("C#", "C#0", 1, NOTE),
	D_FLAT0("Db", "Db0", 1, NOTE),
	D0("D", "D0", 2, NOTE),
	D_SHARP0("D#", "D#0", 3, NOTE),
	E_FLAT0("Eb", "Eb0", 3, NOTE),
	E0("E", "E0", 4, NOTE),
	F0("F", "F0", 5, NOTE),
	F_SHARP0("F#", "F#0", 6, NOTE),
	G_FLAT0("Gb", "Gb0", 6, NOTE),
	G0("G", "G0", 7, NOTE),
	G_SHARP0("G#", "G#0", 8, NOTE),
	A_FLAT0("Ab", "Ab0", 8, NOTE),
	A0("A", "A0", 9, NOTE),
	A_SHARP0("A#", "A#0", 10, NOTE),
	B_FLAT0("Bb", "Bb0", 10, NOTE),
	B0("B", "B0", 11, NOTE),

	C1("C", "C1", 12, NOTE),
	C_SHARP1("C#", "C#1", 13, NOTE),
	D_FLAT1("Db", "Db1", 13, NOTE),
	D1("D", "D1", 14, NOTE),
	D_SHARP1("D#", "D#1", 15, NOTE),
	E_FLAT1("Eb", "Eb1", 15, NOTE),
	E1("E", "E1", 16, NOTE),
	F1("F", "F1", 17, NOTE),
	F_SHARP1("F#", "F#1", 18, NOTE),
	G_FLAT1("Gb", "Gb1", 18, NOTE),
	G1("G", "G1", 19, NOTE),
	G_SHARP1("G#", "G#1", 20, NOTE),
	A_FLAT1("Ab", "Ab1", 20, NOTE),
	A1("A", "A1", 21, NOTE),
	A_SHARP1("A#", "A#1", 22, NOTE),
	B_FLAT1("Bb", "Bb1", 22, NOTE),
	B1("B", "B1", 23, NOTE),

	C2("C", "C2", 24, NOTE),
	C_SHARP2("C#", "C#2", 25, NOTE),
	D_FLAT2("Db", "Db2", 25, NOTE),
	D2("D", "D2", 26, NOTE),
	D_SHARP2("D#", "D#2", 27, NOTE),
	E_FLAT2("Eb", "Eb2", 27, NOTE),
	E2("E", "E2", 28, NOTE),
	F2("F", "F2", 29, NOTE),
	F_SHARP2("F#", "F#2", 30, NOTE),
	G_FLAT2("Gb", "Gb2", 30, NOTE),
	G2("G", "G2", 31, NOTE),
	G_SHARP2("G#", "G#2", 32, NOTE),
	A_FLAT2("Ab", "Ab2", 32, NOTE),
	A2("A", "A2", 33, NOTE),
	A_SHARP2("A#", "A#2", 34, NOTE),
	B_FLAT2("Bb", "Bb2", 34, NOTE),
	B2("B", "B2", 35, NOTE),

	C3("C", "C3", 36, NOTE),
	C_SHARP3("C#", "C#3", 37, NOTE),
	D_FLAT3("Db", "Db3", 37, NOTE),
	D3("D", "D3", 38, NOTE),
	D_SHARP3("D#", "D#3", 39, NOTE),
	E_FLAT3("Eb", "Eb3", 39, NOTE),
	E3("E", "E3", 40, NOTE),
	F3("F", "F3", 41, NOTE),
	F_SHARP3("F#", "F#3", 42, NOTE),
	G_FLAT3("Gb", "Gb3", 42, NOTE),
	G3("G", "G3", 43, NOTE),
	G_SHARP3("G#", "G#3", 44, NOTE),
	A_FLAT3("Ab", "Ab3", 44, NOTE),
	A3("A", "A3", 45, NOTE),
	A_SHARP3("A#", "A#3", 46, NOTE),
	B_FLAT3("Bb", "Bb3", 46, NOTE),
	B3("B", "B3", 47, NOTE),

	C4("C", "C4", 48, NOTE),
	C_SHARP4("C#", "C#4", 49, NOTE),
	D_FLAT4("Db", "Db4", 49, NOTE),
	D4("D", "D4", 50, NOTE),
	D_SHARP4("D#", "D#4", 51, NOTE),
	E_FLAT4("Eb", "Eb4", 51, NOTE),
	E4("E", "E4", 52, NOTE),
	F4("F", "F4", 53, NOTE),
	F_SHARP4("F#", "F#4", 54, NOTE),
	G_FLAT4("Gb", "Gb4", 54, NOTE),
	G4("G", "G4", 55, NOTE),
	G_SHARP4("G#", "G#4", 56, NOTE),
	A_FLAT4("Ab", "Ab4", 56, NOTE),
	A4("A", "A4", 57, NOTE),
	A_SHARP4("A#", "A#4", 58, NOTE),
	B_FLAT4("Bb", "Bb4", 58, NOTE),
	B4("B", "B4", 59, NOTE),

	C5("C", "C5", 60, NOTE),
	C_SHARP5("C#", "C#5", 61, NOTE),
	D_FLAT5("Db", "Db5", 61, NOTE),
	D5("D", "D5", 62, NOTE),
	D_SHARP5("D#", "D#5", 63, NOTE),
	E_FLAT5("Eb", "Eb5", 63, NOTE),
	E5("E", "E5", 64, NOTE),
	F5("F", "F5", 65, NOTE),
	F_SHARP5("F#", "F#5", 66, NOTE),
	G_FLAT5("Gb", "Gb5", 66, NOTE),
	G5("G", "G5", 67, NOTE),
	G_SHARP5("G#", "G#5", 68, NOTE),
	A_FLAT5("Ab", "Ab5", 68, NOTE),
	A5("A", "A5", 69, NOTE),
	A_SHARP5("A#", "A#5", 70, NOTE),
	B_FLAT5("Bb", "Bb5", 70, NOTE),
	B5("B", "B5", 71, NOTE),

	C6("C", "C6", 72, NOTE),
	C_SHARP6("C#", "C#6", 73, NOTE),
	D_FLAT6("Db", "Db6", 73, NOTE),
	D6("D", "D6", 74, NOTE),
	D_SHARP6("D#", "D#6", 75, NOTE),
	E_FLAT6("Eb", "Eb6", 75, NOTE),
	E6("E", "E6", 76, NOTE),
	F6("F", "F6", 77, NOTE),
	F_SHARP6("F#", "F#6", 78, NOTE),
	G_FLAT6("Gb", "Gb6", 78, NOTE),
	G6("G", "G6", 79, NOTE),
	G_SHARP6("G#", "G#6", 80, NOTE),
	A_FLAT6("Ab", "Ab6", 80, NOTE),
	A6("A", "A6", 81, NOTE),
	A_SHARP6("A#", "A#6", 82, NOTE),
	B_FLAT6("Bb", "Bb6", 82, NOTE),
	B6("B", "B6", 83, NOTE),

	C7("C", "C7", 84, NOTE),
	C_SHARP7("C#", "C#7", 85, NOTE),
	D_FLAT7("Db", "Db7", 85, NOTE),
	D7("D", "D7", 86, NOTE),
	D_SHARP7("D#", "D#7", 87, NOTE),
	E_FLAT7("Eb", "Eb7", 87, NOTE),
	E7("E", "E7", 88, NOTE),
	F7("F", "F7", 89, NOTE),
	F_SHARP7("F#", "F#7", 90, NOTE),
	G_FLAT7("Gb", "Gb7", 90, NOTE),
	G7("G", "G7", 91, NOTE),
	G_SHARP7("G#", "G#7", 92, NOTE),
	A_FLAT7("Ab", "Ab7", 92, NOTE),
	A7("A", "A7", 93, NOTE),
	A_SHARP7("A#", "A#7", 94, NOTE),
	B_FLAT7("Bb", "Bb7", 94, NOTE),
	B7("B", "B7", 95, NOTE),

	C8("C", "C8", 96, NOTE),
	C_SHARP8("C#", "C#8", 97, NOTE),
	D_FLAT8("Db", "Db8", 97, NOTE),
	D8("D", "D8", 98, NOTE),
	D_SHARP8("D#", "D#8", 99, NOTE),
	E_FLAT8("Eb", "Eb8", 99, NOTE),
	E8("E", "E8", 100, NOTE),
	F8("F", "F8", 101, NOTE),
	F_SHARP8("F#", "F#8", 102, NOTE),
	G_FLAT8("Gb", "Gb8", 102, NOTE),
	G8("G", "G8", 103, NOTE),
	G_SHARP8("G#", "G#8", 104, NOTE),
	A_FLAT8("Ab", "Ab8", 104, NOTE),
	A8("A", "A8", 105, NOTE),
	A_SHARP8("A#", "A#8", 106, NOTE),
	B_FLAT8("Bb", "Bb8", 106, NOTE),
	B8("B", "B8", 107, NOTE),

	C9("C", "C9", 108, NOTE),
	C_SHARP9("C#", "C#9", 109, NOTE),
	D_FLAT9("Db", "Db9", 109, NOTE),
	D9("D", "D9", 110, NOTE),
	D_SHARP9("D#", "D#9", 111, NOTE),
	E_FLAT9("Eb", "Eb9", 111, NOTE),
	E9("E", "E9", 112, NOTE),
	F9("F", "F9", 113, NOTE),
	F_SHARP9("F#", "F#9", 114, NOTE),
	G_FLAT9("Gb", "Gb9", 114, NOTE),
	G9("G", "G9", 115, NOTE),
	G_SHARP9("G#", "G#9", 116, NOTE),
	A_FLAT9("Ab", "Ab9", 116, NOTE),
	A9("A", "A9", 117, NOTE),
	A_SHARP9("A#", "A#9", 118, NOTE),
	B_FLAT9("Bb", "Bb9", 118, NOTE),
	B9("B", "B9", 119, NOTE),

	C10("C", "C10", 120, NOTE),
	C_SHARP10("C#", "C#10", 121, NOTE),
	D_FLAT10("Db", "Db10", 121, NOTE),
	D10("D", "D10", 122, NOTE),
	D_SHARP10("D#", "D#10", 123, NOTE),
	E_FLAT10("Eb", "Eb10", 123, NOTE),
	E10("E", "E10", 124, NOTE),
	F10("F", "F10", 125, NOTE),
	F_SHARP10("F#", "F#10", 126, NOTE),
	G_FLAT10("Gb", "Gb10", 126, NOTE),
	G10("G", "G10", 127, NOTE),


	GM_ACOUSTIC_BASS_DRUM("GM_ACOUSTIC_BASS_DRUM", 36, GM_SOUND),
	GM_BASS_DRUM_1("GM_BASS_DRUM_1", 36, GM_SOUND),
	GM_SIDE_STICK("GM_SIDE_STICK", 37, GM_SOUND),
	GM_ACOUSTIC_SNARE("GM_ACOUSTIC_SNARE", 38, GM_SOUND),
	GM_HAND_CLAP("GM_HAND_CLAP", 39, GM_SOUND),
	GM_ELECTRIC_SNARE("GM_ELECTRIC_SNARE", 40, GM_SOUND),
	GM_LOW_FLOOR_TOM("GM_LOW_FLOOR_TOM", 41, GM_SOUND),
	GM_CLOSED_HI_HAT("GM_CLOSED_HI_HAT", 42, GM_SOUND),
	GM_HIGH_FLOOR_TOM("GM_HIGH_FLOOR_TOM", 43, GM_SOUND),
	GM_PEDAL_HI_HAT("GM_PEDAL_HI_HAT", 44, GM_SOUND),
	GM_LOW_TOM("GM_LOW_TOM", 45, GM_SOUND),
	GM_OPEN_HI_HAT("GM_OPEN_HI_HAT", 46, GM_SOUND),
	GM_LOW_MID_TOM("GM_LOW_MID_TOM", 47, GM_SOUND),
	GM_HI_MID_TOM("GM_HI_MID_TOM", 48, GM_SOUND),
	GM_CRASH_CYMBAL_1("GM_CRASH_CYMBAL_1", 49, GM_SOUND),
	GM_HIGH_TOM("GM_HIGH_TOM", 50, GM_SOUND),
	GM_RIDE_CYMBAL_1("GM_RIDE_CYMBAL_1", 51, GM_SOUND),
	GM_CHINESE_CYMBAL("GM_CHINESE_CYMBAL", 52, GM_SOUND),
	GM_RIDE_BELL("GM_RIDE_BELL", 53, GM_SOUND),
	GM_TAMBOURINE("GM_TAMBOURINE", 54, GM_SOUND),
	GM_SPLASH_CYMBAL("GM_SPLASH_CYMBAL", 55, GM_SOUND),
	GM_COWBELL("GM_COWBELL", 56, GM_SOUND),
	GM_CRASH_CYMBAL_2("GM_CRASH_CYMBAL_2", 57, GM_SOUND),
	GM_VIBRASLAP("GM_VIBRASLAP", 58, GM_SOUND),
	GM_RIDE_CYMBAL_2("GM_RIDE_CYMBAL_2", 59, GM_SOUND),
	GM_HI_BONGO("GM_HI_BONGO", 60, GM_SOUND),
	GM_LOW_BONGO("GM_LOW_BONGO", 61, GM_SOUND),
	GM_MUTE_HI_CONGA("GM_MUTE_HI_CONGA", 62, GM_SOUND),
	GM_OPEN_HI_CONGA("GM_OPEN_HI_CONGA", 63, GM_SOUND),
	GM_LOW_CONGA("GM_LOW_CONGA", 64, GM_SOUND),
	GM_HIGH_TIMBALE("GM_HIGH_TIMBALE", 65, GM_SOUND),
	GM_LOW_TIMBALE("GM_LOW_TIMBALE", 66, GM_SOUND),
	GM_HIGH_AGOGO("GM_HIGH_AGOGO", 67, GM_SOUND),
	GM_LOW_AGOGO("GM_LOW_AGOGO", 68, GM_SOUND),
	GM_CABASA("GM_CABASA", 69, GM_SOUND),
	GM_MARACAS("GM_MARACAS", 70, GM_SOUND),
	GM_SHORT_WHISTLE("GM_SHORT_WHISTLE", 71, GM_SOUND),
	GM_LONG_WHISTLE("GM_LONG_WHISTLE", 72, GM_SOUND),
	GM_SHORT_GUIRO("GM_SHORT_GUIRO", 73, GM_SOUND),
	GM_LONG_GUIRO("GM_LONG_GUIRO", 74, GM_SOUND),
	GM_CLAVES("GM_CLAVES", 75, GM_SOUND),
	GM_HI_WOOD_BLOCK("GM_HI_WOOD_BLOCK", 76, GM_SOUND),
	GM_LOW_WOOD_BLOCK("GM_LOW_WOOD_BLOCK", 77, GM_SOUND),
	GM_MUTE_CUICA("GM_MUTE_CUICA", 78, GM_SOUND),
	GM_OPEN_CUICA("GM_OPEN_CUICA", 79, GM_SOUND),
	GM_MUTE_TRIANGLE("GM_MUTE_TRIANGLE", 80, GM_SOUND),
	GM_OPEN_TRIANGLE("GM_OPEN_TRIANGLE", 81, GM_SOUND),


		
	GM_ACOUSTIC_GRAND_PIANO("GM_ACOUSTIC_GRAND_PIANO", 1 - 1, GM_SOUND),
	GM_BRIGHT_ACOUSTIC_PIANO("GM_BRIGHT_ACOUSTIC_PIANO", 2 - 1, GM_SOUND),
	GM_ELECTRIC_GRAND_PIANO("GM_ELECTRIC_GRAND_PIANO", 3 - 1, GM_SOUND),
	GM_HONKY_TONK_PIANO("GM_HONKY_TONK_PIANO", 4 - 1, GM_SOUND),
	GM_ELECTRIC_PIANO_1("GM_ELECTRIC_PIANO_1", 5 - 1, GM_SOUND),
	GM_ELECTRIC_PIANO_2("GM_ELECTRIC_PIANO_2", 6 - 1, GM_SOUND),
	GM_HARPSICHORD("GM_HARPSICHORD", 7 - 1, GM_SOUND),
	GM_CLAVINET("GM_CLAVINET", 8 - 1, GM_SOUND),
	GM_CELESTA("GM_CELESTA", 9 - 1, GM_SOUND),
	GM_GLOCKENSPIEL("GM_GLOCKENSPIEL", 10 - 1, GM_SOUND),
	GM_MUSIC_BOX("GM_MUSIC_BOX", 11 - 1, GM_SOUND),
	GM_VIBRAPHONE("GM_VIBRAPHONE", 12 - 1, GM_SOUND),
	GM_MARIMBA("GM_MARIMBA", 13 - 1, GM_SOUND),
	GM_XYLOPHONE("GM_XYLOPHONE", 14 - 1, GM_SOUND),
	GM_TUBULAR_BELLS("GM_TUBULAR_BELLS", 15 - 1, GM_SOUND),
	GM_DULCIMER("GM_DULCIMER", 16 - 1, GM_SOUND),
	GM_DRAWBAR_ORGAN("GM_DRAWBAR_ORGAN", 17 - 1, GM_SOUND),
	GM_PERCUSSIVE_ORGAN("GM_PERCUSSIVE_ORGAN", 18 - 1, GM_SOUND),
	GM_ROCK_ORGAN("GM_ROCK_ORGAN", 19 - 1, GM_SOUND),
	GM_CHURCH_ORGAN("GM_CHURCH_ORGAN", 20 - 1, GM_SOUND),
	GM_REED_ORGAN("GM_REED_ORGAN", 21 - 1, GM_SOUND),
	GM_ACCORDION("GM_ACCORDION", 22 - 1, GM_SOUND),
	GM_HARMONICA("GM_HARMONICA", 23 - 1, GM_SOUND),
	GM_TANGO_ACCORDION("GM_TANGO_ACCORDION", 24 - 1, GM_SOUND),
	GM_ACOUSTIC_GUITAR_NYLON("GM_ACOUSTIC_GUITAR_NYLON", 25 - 1, GM_SOUND),
	GM_ACOUSTIC_GUITAR_STEEL("GM_ACOUSTIC_GUITAR_STEEL", 26 - 1, GM_SOUND),
	GM_ELECTRIC_GUITAR_JAZZ("GM_ELECTRIC_GUITAR_JAZZ", 27 - 1, GM_SOUND),
	GM_ELECTRIC_GUITAR_CLEAN("GM_ELECTRIC_GUITAR_CLEAN", 28 - 1, GM_SOUND),
	GM_ELECTRIC_GUITAR_MUTED("GM_ELECTRIC_GUITAR_MUTED", 29 - 1, GM_SOUND),
	GM_OVERDRIVEN_GUITAR("GM_OVERDRIVEN_GUITAR", 30 - 1, GM_SOUND),
	GM_DISTORTION_GUITAR("GM_DISTORTION_GUITAR", 31 - 1, GM_SOUND),
	GM_GUITAR_HARMONICS("GM_GUITAR_HARMONICS", 32 - 1, GM_SOUND),
	GM_ACOUSTIC_BASS("GM_ACOUSTIC_BASS", 33 - 1, GM_SOUND),
	GM_ELECTRIC_BASS_FINGER("GM_ELECTRIC_BASS_FINGER", 34 - 1, GM_SOUND),
	GM_ELECTRIC_BASS_PICK("GM_ELECTRIC_BASS_PICK", 35 - 1, GM_SOUND),
	GM_FRETLESS_BASS("GM_FRETLESS_BASS", 36 - 1, GM_SOUND),
	GM_SLAP_BASS_1("GM_SLAP_BASS_1", 37 - 1, GM_SOUND),
	GM_SLAP_BASS_2("GM_SLAP_BASS_2", 38 - 1, GM_SOUND),
	GM_SYNTH_BASS_1("GM_SYNTH_BASS_1", 39 - 1, GM_SOUND),
	GM_SYNTH_BASS_2("GM_SYNTH_BASS_2", 40 - 1, GM_SOUND),
	GM_VIOLIN("GM_VIOLIN", 41 - 1, GM_SOUND),
	GM_VIOLA("GM_VIOLA", 42 - 1, GM_SOUND),
	GM_CELLO("GM_CELLO", 43 - 1, GM_SOUND),
	GM_CONTRABASS("GM_CONTRABASS", 44 - 1, GM_SOUND),
	GM_TREMOLO_STRINGS("GM_TREMOLO_STRINGS", 45 - 1, GM_SOUND),
	GM_PIZZICATO_STRINGS("GM_PIZZICATO_STRINGS", 46 - 1, GM_SOUND),
	GM_ORCHESTRAL_HARP("GM_ORCHESTRAL_HARP", 47 - 1, GM_SOUND),
	GM_TIMPANI("GM_TIMPANI", 48 - 1, GM_SOUND),
	GM_STRING_ENSEMBLE_1("GM_STRING_ENSEMBLE_1", 49 - 1, GM_SOUND),
	GM_STRING_ENSEMBLE_2("GM_STRING_ENSEMBLE_2", 50 - 1, GM_SOUND),
	GM_SYNTH_STRINGS_1("GM_SYNTH_STRINGS_1", 51 - 1, GM_SOUND),
	GM_SYNTH_STRINGS_2("GM_SYNTH_STRINGS_2", 52 - 1, GM_SOUND),
	GM_CHOIR_AAHS("GM_CHOIR_AAHS", 53 - 1, GM_SOUND),
	GM_VOICE_OOHS("GM_VOICE_OOHS", 54 - 1, GM_SOUND),
	GM_SYNTH_CHOIR("GM_SYNTH_CHOIR", 55 - 1, GM_SOUND),
	GM_ORCHESTRA_HIT("GM_ORCHESTRA_HIT", 56 - 1, GM_SOUND),
	GM_TRUMPET("GM_TRUMPET", 57 - 1, GM_SOUND),
	GM_TROMBONE("GM_TROMBONE", 58 - 1, GM_SOUND),
	GM_TUBA("GM_TUBA", 59 - 1, GM_SOUND),
	GM_MUTED_TRUMPET("GM_MUTED_TRUMPET", 60 - 1, GM_SOUND),
	GM_FRENCH_HORN("GM_FRENCH_HORN", 61 - 1, GM_SOUND),
	GM_BRASS_SECTION("GM_BRASS_SECTION", 62 - 1, GM_SOUND),
	GM_SYNTH_BRASS_1("GM_SYNTH_BRASS_1", 63 - 1, GM_SOUND),
	GM_SYNTH_BRASS_2("GM_SYNTH_BRASS_2", 64 - 1, GM_SOUND),
	GM_SOPRANO_SAX("GM_SOPRANO_SAX", 65 - 1, GM_SOUND),
	GM_ALTO_SAX("GM_ALTO_SAX", 66 - 1, GM_SOUND),
	GM_TENOR_SAX("GM_TENOR_SAX", 67 - 1, GM_SOUND),
	GM_BARITONE_SAX("GM_BARITONE_SAX", 68 - 1, GM_SOUND),
	GM_OBOE("GM_OBOE", 69 - 1, GM_SOUND),
	GM_ENGLISH_HORN("GM_ENGLISH_HORN", 70 - 1, GM_SOUND),
	GM_BASSOON("GM_BASSOON", 71 - 1, GM_SOUND),
	GM_CLARINET("GM_CLARINET", 72 - 1, GM_SOUND),
	GM_PICCOLO("GM_PICCOLO", 73 - 1, GM_SOUND),
	GM_FLUTE("GM_FLUTE", 74 - 1, GM_SOUND),
	GM_RECORDER("GM_RECORDER", 75 - 1, GM_SOUND),
	GM_PAN_FLUTE("GM_PAN_FLUTE", 76 - 1, GM_SOUND),
	GM_BLOWN_BOTTLE("GM_BLOWN_BOTTLE", 77 - 1, GM_SOUND),
	GM_SHAKUHACHI("GM_SHAKUHACHI", 78 - 1, GM_SOUND),
	GM_WHISTLE("GM_WHISTLE", 79 - 1, GM_SOUND),
	GM_OCARINA("GM_OCARINA", 80 - 1, GM_SOUND),
	GM_SYNTH_LEAD_1_SQUARE("GM_SYNTH_LEAD_1_SQUARE", 81 - 1, GM_SOUND),
	GM_SYNTH_LEAD_2_SAWTOOTH("GM_SYNTH_LEAD_2_SAWTOOTH", 82 - 1, GM_SOUND),
	GM_SYNTH_LEAD_3_CALLIOPE("GM_SYNTH_LEAD_3_CALLIOPE", 83 - 1, GM_SOUND),
	GM_SYNTH_LEAD_4_CHIFF("GM_SYNTH_LEAD_4_CHIFF", 84 - 1, GM_SOUND),
	GM_SYNTH_LEAD_5_CHARANG("GM_SYNTH_LEAD_5_CHARANG", 85 - 1, GM_SOUND),
	GM_SYNTH_LEAD_6_VOICE("GM_SYNTH_LEAD_6_VOICE", 86 - 1, GM_SOUND),
	GM_SYNTH_LEAD_7_FIFTHS("GM_SYNTH_LEAD_7_FIFTHS", 87 - 1, GM_SOUND),
	GM_SYNTH_LEAD_8_BASS_AND_LEAD("GM_SYNTH_LEAD_8_BASS_AND_LEAD", 88 - 1, GM_SOUND),
	GM_SYNTH_PAD_1_NEW_AGE("GM_SYNTH_PAD_1_NEW_AGE", 89 - 1, GM_SOUND),
	GM_SYNTH_PAD_2_WARM("GM_SYNTH_PAD_2_WARM", 90 - 1, GM_SOUND),
	GM_SYNTH_PAD_3_POLYSYNTH("GM_SYNTH_PAD_3_POLYSYNTH", 91 - 1, GM_SOUND),
	GM_SYNTH_PAD_4_CHOIR("GM_SYNTH_PAD_4_CHOIR", 92 - 1, GM_SOUND),
	GM_SYNTH_PAD_5_BOWED("GM_SYNTH_PAD_5_BOWED", 93 - 1, GM_SOUND),
	GM_SYNTH_PAD_6_METALLIC("GM_SYNTH_PAD_6_METALLIC", 94 - 1, GM_SOUND),
	GM_SYNTH_PAD_7_HALO("GM_SYNTH_PAD_7_HALO", 95 - 1, GM_SOUND),
	GM_SYNTH_PAD_8_SWEEP("GM_SYNTH_PAD_8_SWEEP", 96 - 1, GM_SOUND),
	GM_SYNTH_FX_1_RAIN("GM_SYNTH_FX_1_RAIN", 97 - 1, GM_SOUND),
	GM_SYNTH_FX_2_SOUNDTRACK("GM_SYNTH_FX_2_SOUNDTRACK", 98 - 1, GM_SOUND),
	GM_SYNTH_FX_3_CRYSTAL("GM_SYNTH_FX_3_CRYSTAL", 99 - 1, GM_SOUND),
	GM_SYNTH_FX_4_ATMOSPHERE("GM_SYNTH_FX_4_ATMOSPHERE", 100 - 1, GM_SOUND),
	GM_SYNTH_FX_5_BRIGHTNESS("GM_SYNTH_FX_5_BRIGHTNESS", 101 - 1, GM_SOUND),
	GM_SYNTH_FX_6_GOBLINS("GM_SYNTH_FX_6_GOBLINS", 102 - 1, GM_SOUND),
	GM_SYNTH_FX_7_ECHOES("GM_SYNTH_FX_7_ECHOES", 103 - 1, GM_SOUND),
	GM_SYNTH_FX_8_SCI_FI("GM_SYNTH_FX_8_SCI_FI", 104 - 1, GM_SOUND),
	GM_SITAR("GM_SITAR", 105 - 1, GM_SOUND),
	GM_BANJO("GM_BANJO", 106 - 1, GM_SOUND),
	GM_SHAMISEN("GM_SHAMISEN", 107 - 1, GM_SOUND),
	GM_KOTO("GM_KOTO", 108 - 1, GM_SOUND),
	GM_KALIMBA("GM_KALIMBA", 109 - 1, GM_SOUND),
	GM_BAG_PIPE("GM_BAG_PIPE", 110 - 1, GM_SOUND),
	GM_FIDDLE("GM_FIDDLE", 111 - 1, GM_SOUND),
	GM_SHANAI("GM_SHANAI", 112 - 1, GM_SOUND),
	GM_TINKLE_BELL("GM_TINKLE_BELL", 113 - 1, GM_SOUND),
	GM_AGOGO("GM_AGOGO", 114 - 1, GM_SOUND),
	GM_STEEL_DRUMS("GM_STEEL_DRUMS", 115 - 1, GM_SOUND),
	GM_WOODBLOCK("GM_WOODBLOCK", 116 - 1, GM_SOUND),
	GM_TAIKO_DRUM("GM_TAIKO_DRUM", 117 - 1, GM_SOUND),
	GM_MELODIC_TOM("GM_MELODIC_TOM", 118 - 1, GM_SOUND),
	GM_SYNTH_DRUM("GM_SYNTH_DRUM", 119 - 1, GM_SOUND),
	GM_REVERSE_CYMBAL("GM_REVERSE_CYMBAL", 120 - 1, GM_SOUND),
	GM_GUITAR_FRET_NOISE("GM_GUITAR_FRET_NOISE", 121 - 1, GM_SOUND),
	GM_BREATH_NOISE("GM_BREATH_NOISE", 122 - 1, GM_SOUND),
	GM_SEASHORE("GM_SEASHORE", 123 - 1, GM_SOUND),
	GM_BIRD_TWEET("GM_BIRD_TWEET", 124 - 1, GM_SOUND),
	GM_TELEPHONE_RING("GM_TELEPHONE_RING", 125 - 1, GM_SOUND),
	GM_HELICOPTER("GM_HELICOPTER", 126 - 1, GM_SOUND),
	GM_APPLAUSE("GM_APPLAUSE", 127 - 1, GM_SOUND),
	GM_GUNSHOT("GM_GUNSHOT", 128 - 1, GM_SOUND);

	static {
		createLinkedList();
	}

	private static void createLinkedList() {
		System.out.println("hi!");
		for (NoteValue noteValue : NoteValue.values()) {
			noteValue.above = NoteValueMap.get(noteValue.value + 1);
			noteValue.below = NoteValueMap.get(noteValue.value - 1);
		}
	}

	private String simpleNote;
	private String noteAndOctave;
	private int value;
	private NoteValueType type;
	private NoteValue above;
	private NoteValue below;

	private NoteValue(String name, int value, NoteValueType type) {
		this(name, name, value, type);
	}

	private NoteValue(String simpleNote, String noteAndOctave, int value, NoteValueType type) {
		this.simpleNote = simpleNote;
		this.noteAndOctave = noteAndOctave;
		this.value = value;
		this.type = type;
		NoteValueMap.add(this);
	}

	public NoteValueType getNoteValueType() {
		return type;
	}

	public String getSimpleNote() {
		return simpleNote;
	}

	public String getNoteAndOctave() {
		return noteAndOctave;
	}

	public int getIntValue() {
		return value;
	}

	public boolean isHigher(NoteValue note) {
		return this.value > note.value;
	}

	public boolean isLower(NoteValue note) {
		return this.value < note.value;
	}

	public static NoteValue forInt(int intValue) {
		return NoteValueMap.get(intValue);
	}

	public static NoteValue randomNoteBetween(NoteValue a, NoteValue b) {
		int val = RandyTheRandom.randomIntBetweenExclusive(a.getIntValue(), b.getIntValue());
		return NoteValue.forInt(val);

	}

	public NoteValue halfStepUp() {
		return above;
	}

	public NoteValue halfStepDown() {
		return below;
	}

	public boolean isOctave(NoteValue note) {
		int dif = Math.abs(this.value - note.value);
		if (dif % Interval.OCTAVE.asInt() == 0) {
			return true;
		}

		return false;
	}
}
